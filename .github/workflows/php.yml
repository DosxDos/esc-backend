name: PHP Unit Tests

on:
  push:
    branches:
      - main    # Ejecutar pruebas en la rama principal
  pull_request:
    branches:
      - main    # Ejecutar pruebas cuando se haga un PR a la rama principal

jobs:
  phpunit:
    runs-on: ubuntu-latest  # El sistema operativo sobre el que se ejecutará el flujo de trabajo

    services:
      mysql:
        image: mysql:8.0   # Imagen de MySQL
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db  # Nombre de la base de datos
          MYSQL_USER: test_user    # Usuario de la base de datos
          MYSQL_PASSWORD: test_password  # Contraseña del usuario
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Este paso asegura que el código esté disponible en el entorno de GitHub Actions

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'  # Puedes especificar la versión de PHP que estés usando
          extensions: mysqli, pdo_mysql  # Extensiones necesarias para MySQL

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php  # Instalar Composer
          mv composer.phar /usr/local/bin/composer  # Moverlo al directorio bin

      - name: Install dependencies
        run: |
          composer install --no-interaction  # Instalar las dependencias de PHP con Composer

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 --silent; do
            echo "Esperando a que MySQL esté listo..."
            sleep 2
          done

      - name: Set up database schema
        run: |
          mysql -h 127.0.0.1 -u test_user -ptest_password test_db < /path/to/your/schema.sql

      - name: Run PHPUnit tests
        run: |
          vendor/bin/phpunit --configuration phpunit.xml  # Ejecutar los tests utilizando PHPUnit
