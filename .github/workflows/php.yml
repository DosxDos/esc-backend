name: PHP Unit Tests

on:
  push:
    branches:
      - main    # Ejecutar pruebas en la rama principal
  pull_request:
    branches:
      - main    # Ejecutar pruebas cuando se haga un PR a la rama principal

jobs:
  phpunit:
    runs-on: ubuntu-latest  # El sistema operativo sobre el que se ejecutará el flujo de trabajo

    services:
      mysql:
        image: mysql:8.0   # Imagen de MySQL 8.0 compatible
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db  # Nombre de la base de datos
          MYSQL_USER: test_user    # Usuario de la base de datos
          MYSQL_PASSWORD: test_password  # Contraseña del usuario
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Este paso asegura que el código esté disponible en el entorno de GitHub Actions

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'  # Especificamos PHP 8.2, que es una versión estable y ampliamente utilizada

      - name: Install Apache and PHP modules
        run: |
          sudo apt-get update
          sudo apt-get install apache2 libapache2-mod-php php8.2-mysql php8.2-cli php8.2-xml php8.2-mbstring php8.2-curl -y  # Instalar Apache y las extensiones de PHP necesarias (sin php8.2-json)

      - name: Install MySQL client
        run: |
          sudo apt-get install mysql-client -y  # Instalar el cliente de MySQL para conectarse al servicio MySQL

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php  # Instalar Composer
          mv composer.phar /usr/local/bin/composer  # Moverlo al directorio bin

      - name: Install dependencies
        run: |
          composer install --no-interaction  # Instalar las dependencias de PHP con Composer

      - name: Wait for MySQL to be ready
        run: |
          echo "Esperando a que MySQL esté listo..."
          until mysqladmin -h 127.0.0.1 -P 3306 -u root -proot ping --silent; do  # Cambiar 'mysql' por '127.0.0.1' y el puerto
            echo "Esperando MySQL..."
            sleep 3  # Espera más tiempo entre intentos para dar tiempo al contenedor
          done
          echo "MySQL está listo."

      - name: Set up database schema
        run: |
          echo "Creando base de datos test_db si no existe..."
          mysql -h 127.0.0.1 -P 3306 -u root -proot -e "CREATE DATABASE IF NOT EXISTS test_db;"  # Usar IP localhost y puerto explícito
          echo "Base de datos test_db creada."

      - name: Set up database schema
        run: |
          echo "Esperando 10 segundos antes de configurar el esquema de la base de datos..."
          sleep 10  # Espera adicional para asegurar que el contenedor MySQL esté completamente disponible
          echo "Importando esquema de la base de datos..."
          mysql -h 127.0.0.1 -P 3306 -u test_user -ptest_password test_db < ./schema.sql  # Ajustar la ruta si es necesario
        env:
          PATH_TO_SCHEMA: ./database/schema.sql  # Ruta al archivo de esquema de base de datos

      - name: Run PHPUnit tests
        run: |
          vendor/bin/phpunit --configuration phpunit.xml  # Ejecutar los tests utilizando PHPUnit
