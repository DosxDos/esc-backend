name: PHP Unit Tests

on:
  push:
    branches:
      - main  # Ejecutar pruebas en la rama principal
  pull_request:
    branches:
      - main  # Ejecutar pruebas cuando se haga un PR a la rama principal

jobs:
  phpunit:
    runs-on: ubuntu-latest  # Sistema operativo sobre el que se ejecutará el flujo de trabajo

    services:
      mysql:
        image: mysql:8.0   # Imagen de MySQL
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db  # Nombre de la base de datos
          MYSQL_USER: test_user    # Usuario de la base de datos
          MYSQL_PASSWORD: test_password  # Contraseña del usuario
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Asegura que el código esté disponible en el entorno de GitHub Actions

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'  # Especifica la versión de PHP
          extensions: mysqli, pdo_mysql  # Extensiones necesarias para MySQL

      - name: Install Composer dependencies
        run: composer install --no-interaction  # Instalar dependencias de PHP con Composer

      - name: Wait for MySQL to be ready
        run: |
          echo "Esperando a que MySQL esté listo..."
          # Intentar conectar a MySQL hasta que esté disponible
          until mysqladmin -h mysql -u root -proot ping --silent; do
            echo "Esperando MySQL..."
            sleep 3  # Espera más tiempo entre intentos para dar tiempo al contenedor
          done
          echo "MySQL está listo."

      - name: Create the database if not exists
        run: |
          echo "Creando base de datos test_db si no existe..."
          mysql -h mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS test_db;"
          echo "Base de datos creada o ya existe."

      - name: Ensure database directory exists
        run: |
          mkdir -p ./database  # Crear el directorio si no existe
          echo "Este es el contenido del archivo schema.sql" > ./database/schema.sql  # O copia el archivo desde otra ubicación si es necesario

      - name: Set up database schema
        run: |
          echo "Esperando 10 segundos antes de configurar el esquema de la base de datos..."
          sleep 10
          mysql -h mysql -u test_user -ptest_password test_db < ./database/schema.sql  # Usar el nombre del servicio 'mysql' como host
        env:
          PATH_TO_SCHEMA: ./database/schema.sql  # Ruta al archivo de esquema de base de datos

      - name: List files
        run: ls -l ./database  # Listar archivos en el directorio de base de datos 

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --configuration phpunit.xml  # Ejecutar los tests con PHPUnit
